{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lorennav/Desktop/Diana/FINALPROJECT/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport 'tachyons';\nconst app = new Clarifai.App({\n  apiKey: '8d71d1bb21aa4f37a7d23a117ff07f19'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100\n    },\n    size: {\n      value: 3\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:4000/image');\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setSate({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lorennav/Desktop/Diana/FINALPROJECT/smartbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Signin","Register","app","App","apiKey","particlesOptions","particles","number","value","size","interactivity","events","onhover","enable","mode","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","catch","err","console","log","onRouteChange","route","setSate","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport 'tachyons';\n\nconst app = new Clarifai.App({\n  apiKey: '8d71d1bb21aa4f37a7d23a117ff07f19'\n});\n\nconst particlesOptions ={\n      particles:{\n          number:{\n              value: 100\n          },\n          size:{\n              value: 3\n          }\n      },\n      interactivity:{\n          events:{\n              onhover: {\n                  enable: true,\n                  mode: \"repulse\"\n              }\n          }\n      }\n}\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n         id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser= (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col*width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange=(event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:4000/image')\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setSate({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n\n\n  render(){\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return(\n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesOptions}/>\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { this.state.route ==='home'\n      ? <div>\n          <Logo />\n          <Rank name= {this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit= {this.onButtonSubmit} />\n          <FaceRecognition box={box} imageUrl={imageUrl} />\n        </div>\n      : (\n        route === 'signin'\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n      }\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}